name: E2E Integration Test
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - main
      - develop
  workflow_dispatch:
    inputs:
      distinct_id:

jobs:
  test:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
    timeout-minutes: 10
    permissions:
      pull-requests: write
      contents: write

    steps:
    - name: echo distinct ID ${{ github.event.inputs.distinct_id }}
      run: echo ${{ github.event.inputs.distinct_id }}

    - uses: actions/checkout@v4
      with:
        token : ${{ secrets.ORG_PAT_GITHUB }}

    # Install Dapr
    - name: Install Dapr CLI
      run: |
        wget -q https://raw.githubusercontent.com/dapr/cli/master/install/install.sh -O - | /bin/bash
        dapr init --runtime-version 1.13.6 --slim

    # Install Temporal
    - name: Install Temporal CLI and Start Server
      run: |
        curl -sSf https://temporal.download/cli.sh | sh
        export PATH="$HOME/.temporalio/bin:$PATH"
        temporal server start-dev --db-filename /tmp/temporal.db &
        sleep 5

    - name: Set up Python 3.11
      uses: actions/setup-python@v1
      with:
        python-version: "3.11"

      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.8.5
        virtualenvs-create: true
        virtualenvs-in-project: true
        virtualenvs-path: .venv
        installer-parallel: true

      #----------------------------------------------
      #       set up system git client for poetry
      #       known to be available only in poetry 1.8.5
      #----------------------------------------------
    - name: Update application-sdk rev
      run: |
        commit_hash=${{ github.event.inputs.distinct_id }}
        if [ -n "$commit_hash" ]; then
          sed -i "s/rev = \"[^\"]*\"/rev = \"$commit_hash\"/" pyproject.toml
        fi

    - name: Set up system git client for poetry
      run: |
        poetry config experimental.system-git-client true

    - name: Install Dependencies
      run: |
        echo "Current Branch: ${{ github.ref }}"
        git config --global url."https://${{ secrets.ORG_PAT_GITHUB }}@github.com/".insteadOf "git@github.com:"
        # Configure poetry to use project-specific virtualenv
        poetry config virtualenvs.in-project true
        # Install the dependencies
        poetry lock --no-update
        poetry install -vv
        poetry update application-sdk --dry-run

    # Start dapr and temporal services
    - name: Start Platform Services
      run: |
        make start-deps
        # Wait for Dapr sidecar to be ready
        sleep 5

    # Start the application
    - name: Start the application
      id: start_app
      run: |
        make run-app &
        sleep 20

    - name: Run the end-to-end integration tests
      env:
        E2E_POSTGRES_HOST: ${{ secrets.POSTGRES_DB_HOST }}
        E2E_POSTGRES_PORT: 5432
        E2E_POSTGRES_USERNAME: "postgres"
        E2E_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_DB_PASSWORD }}
      run: |
        poetry run coverage run -m pytest tests/e2e

    # Stop all services
    - name: Stop all services and monitoring
      if: always()
      run: |
        # Stop the application and services gracefully
        make stop-all || true