[tool.poetry]
name = "atlan-postgres-app"
version = "0.1.0"
description = ""
authors = ["Atlan Apps Team <apps@atlan.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11.10"
fastapi = {extras = ["standard"], version = "^0.115.0"}
pytest-asyncio = "^0.24.0"
# use local application-sdk repository for development
# application-sdk = { path = "../application-sdk/", develop = true, extras = ["workflows", "daft"]}
# use remote application-sdk repository
application-sdk = {git = "git@github.com:atlanhq/application-sdk.git", rev = "a896e7d0badd19184f8fd5ce589486faf6586734", extras = ["workflows", "iam_auth"]}
psycopg = {extras = ["binary"], version = "^3.2.3"}
jinja2 = "^3.1.2"

[tool.poetry.group.app.dependencies]
aiofiles = "^24.1.0"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.35"}


[tool.poetry.group.dev.dependencies]
pre-commit = "^3.8.0"
isort = "^5.13.2"
watchdog = "^6.0.0"


[tool.poetry.group.test.dependencies]
pytest = "^8.3.3"
coverage = "^7.6.1"
scalene = "^1.5.20"
pandera = {extras = ["io"], version = "^0.22.1"}
orjson = "^3.10.7"
pytest-order = "^1.3.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pyright]
venvPath = "."
venv = ".venv"
typeCheckingMode = "strict"
reportMissingTypeStubs = false

[tool.pytest.ini_options]
asyncio_mode = "auto"
